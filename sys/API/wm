--[[
						BASIC Window Manager

			This window manager basically creates for every new task
			a new window.

			NOTE:
			You could use that in your DE, but it's not recommended, as it only
			creates fullscreen windows
]]

windows = {
	name = {},
	window = {}
} --Stores the path of the file as key, and the handler/window as value

function createWindow(path, maxX, maxY, terminal) --path = the file, maxX & maxY = maximum size of the parent window, terminal = the parent window
	for _, name in ipairs(windows.name) do
		if name == path then
			windows.name[_] = nil
			windows.window[_] = nil
		end
	end
	table.insert(windows.window, window.create(terminal, 1, 1, maxX, maxY, false)) --creates a fullscreen window
	table.insert(windows.name, path)
	
end

function getWindow(path)
	local found = false
	for _, a in ipairs(windows.name) do
		if a == path then --If a window with the same path is found, return it to the caller
			return windows.window[_]
		else
			found = false
		end
	end
	if found == false then return false end
end

function getWindows()
	return windows 			--for whatever reason you need it
end

function deleteWindow(path)
	for _, a in ipairs(windows.name) do
		if a == path then
			windows.name[path] = nil 			--self explaining
			windows.window[path] = nil
		end
	end
end

