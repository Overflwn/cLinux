--[[
	cLinux : Lore of the Day!
	Made by Piorjade, daelvn

	NAME:        /boot/load
	CATEGORY:    boot
	SET:         Boot II
	VERSION:     01:alpha0
	DESCRIPTION: 
		This script is ran after /clinux.i
		and loads important libraries up
		and starts the shell at the end.
]]--
local tTables = {}
local tReadOnly = {}
local native_rawset = rawset
local mt = {
                __metatable = 'Attempt to get protected metatable',
                __newindex = function(self, key, value)
                        if not tTables[self][key] then
                                native_rawset(self, key, value)
                                return
                        end
                        error('Try to write to read only table', 2)
                end
}
mt.__index = function (self, key)
                local var = tTables[self][key]
                if type(var) == 'table' then
                                setmetatable({}, mt)
                end
                return var
end

_G.rawset = function (tab, key, value)
                if tReadOnly[tab] then error('Try to write to read only table', 2) end
                return native_rawset(tab, key, value)
end

local function createReadOnly (tab)
                if type(tab) ~= 'table' then
                                error('table expected, got ' .. type(tab), 2)
                end
                local self = setmetatable({}, mt)
                tTables[self] = tab
                tReadOnly[self] = true
                return self
end

for _, a in ipairs(old.fs.list("/lib/")) do
	print("Loading "..a)
	local ok, err = dofile("/lib/"..a)
	if ok == false then
		local c = term.getTextColor()
		term.setTextColor(colors.red)
		print("["..a.."] "..tostring(err))
		term.setTextColor(c)
		flag.STATE_DEAD = true
	else
		local c = term.getTextColor()
		term.setTextColor(colors.green)
		term.write("[OK]")
		term.setTextColor(c)
		print(" "..a.." loaded!")
		print("Press any key")
		os.pullEvent()
		--sleep(1)
	end
end
local xBox = {}

for _, a in pairs(_G) do
	xBox[_] = a
end

if flag.startX then
	local x = loadfile("/boot/X/xserv.i")
	if x == nil then
		local c = term.getTextColor()
		term.setTextColor(colors.red)
		print("[X] xserv.i couldn't be loaded, aborting.")
		term.setTextColor(c)
		flag.STATE_DEAD = true
	else
		setfenv(x, createReadOnly(xBox))
		local ok, err = pcall(x)
		if ok == nil then
			local c = term.getTextColor()
			term.setTextColor(colors.red)
			term.write("[X] "..err)
			term.setTextColor(c)
			flag.STATE_DEAD = true
		end
	end
else
	flag.STATE_DEAD = true
end

