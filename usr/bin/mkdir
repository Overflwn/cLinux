--[[
	Custom mkdir command, which checks which user is logged in
	This will not allow normal users to make a directory under their
	home directory.
]]

local function m(d)
	local r = false
	local falseDir = false
	local inhome = true
	if currentUsr ~= "root" then
		r = false
	else
		r = true
	end
	local a, b = string.find(d, "//")
	local i, j = string.find(d, "~")
	if a or i ~= nil and i == j then
		falseDir = true
	end
	local a, b = string.find(currentDir, "/usr/"..currentUsr.."/home/")
	if r == false and a == nil then
		inhome = false
	end
	
	if falseDir == false then
		local a, b = string.find(d, "../")
		if a == 1 then
			--d = string.gsub(d, "/", "", 1)
			local col = term.getTextColor()
			term.setTextColor(colors.red)
			print("Invalid Path.")
			term.setTextColor(col)
			return
		end
		local path = currentDir..d
		local a, b = string.find(d, "/")
		if a == 1 then
			path = d
		end
		local a = fs.makeDir(path)
		if a == false then
			local c = term.getTextColor()
			term.setTextColor(colors.red)
			print("You have no privileges, try 'sudo'.")
			term.setTextColor(c)
		elseif a == "Folder/File already exists." then
			local c = term.getTextColor()
			term.setTextColor(colors.red)
			print(a)
			term.setTextColor(c)
		else
			return true
		end
	elseif falseDir == true then
		local col = term.getTextColor()
		term.setTextColor(colors.red)
		print("Invalid path!")
		term.setTextColor(col)
		return false
	else
		print("User not found.")
		return false
	end
end


local tArgs = {...}

if #tArgs < 1 or #tArgs > 1 then
	print("Usage:")
	print("		mkdir <folderName>")
else
	m(tArgs[1])
end